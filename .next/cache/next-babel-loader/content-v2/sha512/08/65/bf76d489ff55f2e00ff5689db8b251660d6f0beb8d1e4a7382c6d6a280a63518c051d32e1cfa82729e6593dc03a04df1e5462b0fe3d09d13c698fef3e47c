{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\moham\\\\Desktop\\\\react\\\\nextjs\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetailPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetailPage;\nexport var __N_SSG = true;\nexport default MeetupDetailPage; // we cant use react hooks like useRoute to get the meetupId in here, just in root components, so we should use context\n// getStaticPaths is a function you need to export in a page conponent file if its a dynamic page and your using getStaticProps not when just using getServerSideProps and just getStaticProps\n// fallback: false : contains all supported meetup id values , if users entered anything that not supported here for example m3 shes ganna see 404 page if true next js ganna creat a page for that dynamicly false for those pages that are visits frequntly\n//\n// context log, this loged in terminal on server(in vs code terminal) bcz codes inside getStaticProps only run on server not client browers\n// m1\n// {\n//   params: { meetupId: 'm1' },\n//   locales: undefined,\n//   locale: undefined,\n//   defaultLocale: undefined\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailPage\");","map":{"version":3,"sources":["C:/Users/moham/Desktop/react/nextjs/next-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetailPage","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,gB;;AA8ET,eAAeA,gBAAf,C,CAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetailPage(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mmdseq:f$0ciethY@cluster0.l7w3g.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  // All documents ids\r\n  return {\r\n    //2\r\n    fallback: false,\r\n\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n\r\n    // before fetching data from db\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mmdseq:f$0ciethY@cluster0.l7w3g.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //   const selectedMeetup = await meetupsCollection.find({_id: meetupId})\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        ...selectedMeetup,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n\r\n// we cant use react hooks like useRoute to get the meetupId in here, just in root components, so we should use context\r\n\r\n// getStaticPaths is a function you need to export in a page conponent file if its a dynamic page and your using getStaticProps not when just using getServerSideProps and just getStaticProps\r\n\r\n// fallback: false : contains all supported meetup id values , if users entered anything that not supported here for example m3 shes ganna see 404 page if true next js ganna creat a page for that dynamicly false for those pages that are visits frequntly\r\n//\r\n\r\n// context log, this loged in terminal on server(in vs code terminal) bcz codes inside getStaticProps only run on server not client browers\r\n// m1\r\n// {\r\n//   params: { meetupId: 'm1' },\r\n//   locales: undefined,\r\n//   locale: undefined,\r\n//   defaultLocale: undefined\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}